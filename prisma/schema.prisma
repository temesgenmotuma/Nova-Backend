generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(version: "3.5.2")]
}

model Customer {
  id       String                                @id @default(uuid())
  username String?
  email    String                                @unique
  // password String
  location Unsupported("geometry(Point, 4326)")? //if cutomer doesn't give location permission

  supabaseId String @unique
}

model Provider {
  id       String  @id @default(uuid())
  name     String  @unique
  email    String? @unique
  phone    String //may not be needed.
  hasValet Boolean

  supabaseId String @unique

  employees Employee[]
  lots      Lot[]
  invitations Invitation[]

}

enum Role {
  Valet
  Admin
}

model Employee {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  role      Role
  phone     String
  createdAt DateTime @default(now())

  providerId String
  provider   Provider @relation(fields: [providerId], references: [id])

  supabaseId String @unique
}

model Invitation {
  id        String   @id @default(uuid())
  email     String   
  role      Role
  createdAt DateTime @default(now())
  expiresAt DateTime

  //might remove later
  lotId String?
  lot   Lot?    @relation(fields: [lotId], references: [id])

  providerId String
  provider   Provider @relation(fields: [providerId], references: [id])
}

model Lot {
  id       String    @id @default(uuid())
  name     String
  capacity Int
  location Unsupported("GEOGRAPHY(POINT, 4326)")
  address  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  providerId String
  provider   Provider @relation(fields: [providerId], references: [id]) 

  Spot      Spot[]
  invitations Invitation[]
}

model Spot {
  id        String     @id @default(uuid())
  name      String
  floor     Int
  price     Decimal?
  status    SpotStatus @default(Available)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  lotId String
  lot   Lot    @relation(fields: [lotId], references: [id])
}

enum  SpotStatus {
  Available
  Reserved
  Occupied
}
